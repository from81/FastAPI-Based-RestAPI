name: Test Coveralls
on:
  push:
    branches:
      - main
      - dev
      - test
jobs:
  Test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: geo
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8' # Version range or exact version of a Python version to use, using SemVer's version range syntax
        # architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
    - name: Install libraries
      run: pip install -r requirements.txt
    - name: Create tables
      run: PGPASSWORD="postgres" psql -U postgres -h localhost -d geo -f app/sql/ddl.sql
    - name: Insert data
      run: |
        sudo add-apt-repository ppa:ubuntugis/ppa
        sudo apt-get update
        sudo apt-get install gdal-bin
        ogrinfo --version
    - run: ogr2ogr -f "PostgreSQL" PG:"host=localhost port=5432 dbname=geo user='postgres' password='postgres'" "data/nsw_polygon.json" -nln nsw_polygon -nlt POLYGON
    - run: ogr2ogr -f "PostgreSQL" PG:"host=localhost port=5432 dbname=geo user='postgres' password='postgres'" "data/nsw_poi.json" -nln nsw_poi -nlt POLYGON
    - run: ogr2ogr -f "PostgreSQL" PG:"host=localhost port=5432 dbname=geo user='postgres' password='postgres'" "data/nsw_neighborhood_sample.json" -nln nsw_neighborhood -nlt POLYGON
    - name: Test
      run: pytest --verbose --color=yes --cov=app --cov-report=xml
    - name: Upload to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        fail_ci_if_error: true
        # verbose: true
        
